<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Jacobi Ventures</title>
    <style>
        body, html { margin: 0; padding: 0; overflow: hidden; background: #fff; display: flex; justify-content: center; align-items: center; height: 100vh; }
        canvas { position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); }
        h1 {
            font-family: Arial, sans-serif;
            font-size: 4rem;
            color: #000;
            text-align: center;
            z-index: 2;
            position: relative;
        }
    </style>
</head>
<body>
    <canvas id="liquidCanvas"></canvas>
    <h1>JACOBI<br>VENTURES</h1>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js"></script>
    <script>
        const canvas = document.querySelector('#liquidCanvas');
        const renderer = new THREE.WebGLRenderer({ canvas, alpha: true });
        renderer.setSize(window.innerWidth, window.innerHeight);

        const scene = new THREE.Scene();
        const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
        camera.position.z = 4;

        const geometry = new THREE.SphereGeometry(1, 64, 64);
        const material = new THREE.MeshPhysicalMaterial({ 
            color: 0x000000, 
            metalness: 0.7, 
            roughness: 0.2, 
            clearcoat: 1.0, 
            clearcoatRoughness: 0.1 
        });
        const liquidSphere = new THREE.Mesh(geometry, material);
        scene.add(liquidSphere);

        const light1 = new THREE.PointLight(0xffffff, 1);
        light1.position.set(5, 5, 5);
        scene.add(light1);

        function animate() {
            requestAnimationFrame(animate);
            liquidSphere.geometry.vertices.forEach((v) => {
                v.normalize().multiplyScalar(1 + 0.15 * Math.sin(v.x * 10 + performance.now() / 1000));
            });
            liquidSphere.geometry.verticesNeedUpdate = true;
            liquidSphere.rotation.y += 0.005;
            renderer.render(scene, camera);
        }
        animate();

        window.addEventListener('resize', () => {
            camera.aspect = window.innerWidth / window.innerHeight;
            camera.updateProjectionMatrix();
            renderer.setSize(window.innerWidth, window.innerHeight);
        });
    </script>
</body>
</html>
